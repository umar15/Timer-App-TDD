[{"E:\\Bootcamp 2020\\timer-tdd\\src\\index.tsx":"1","E:\\Bootcamp 2020\\timer-tdd\\src\\App.tsx":"2","E:\\Bootcamp 2020\\timer-tdd\\src\\components\\Timer.tsx":"3","E:\\Bootcamp 2020\\timer-tdd\\src\\components\\TimerButton\\TimerButton.tsx":"4"},{"size":214,"mtime":1611152004390,"results":"5","hashOfConfig":"6"},{"size":202,"mtime":1611154446356,"results":"7","hashOfConfig":"6"},{"size":1370,"mtime":1611218600776,"results":"8","hashOfConfig":"6"},{"size":448,"mtime":1611163447156,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1vtxmvx",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"E:\\Bootcamp 2020\\timer-tdd\\src\\index.tsx",[],["20","21"],"E:\\Bootcamp 2020\\timer-tdd\\src\\App.tsx",[],"E:\\Bootcamp 2020\\timer-tdd\\src\\components\\Timer.tsx",["22"],"E:\\Bootcamp 2020\\timer-tdd\\src\\components\\TimerButton\\TimerButton.tsx",["23"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./TimerButton.css\";\r\n\r\ntype timerButtonType = {\r\n\tbuttonAction: Function;\r\n\tbuttonValue: string;\r\n};\r\n\r\nconst TimerButton: React.FC<timerButtonType> = ({\r\n\tbuttonAction,\r\n\tbuttonValue,\r\n}) => (\r\n\t<div className=\"button-container\">\r\n\t\t<button className=\"button-value\" onClick={() => buttonAction()}>\r\n\t\t\t{buttonValue}\r\n\t\t</button>\r\n\t</div>\r\n);\r\n\r\nexport default TimerButton;\r\n",{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":14,"column":17,"nodeType":"30","endLine":26,"endColumn":12},{"ruleId":"31","severity":1,"message":"32","line":2,"column":8,"nodeType":"33","messageId":"34","endLine":2,"endColumn":17},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"react-hooks/exhaustive-deps","Assignments to the 'myInterval' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","@typescript-eslint/no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]